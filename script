
import matplotlib.pyplot as plt
import numpy as np
import random
import math

## Dimensions cylindre
rayon=0.5 #mètre
hauteur=1.0 #mètre

##Paramètres consommation
b=1e-2
b0=1e-2
qmax=1e4 #fuel initial

#Paramètres vitesse
a=0.0698
vo=1 #m/s

#Autre paramètres
N=20 #nb cylindres
scoref=0 #score final
tmax=60 #temps maximal en secondes

#Classes
class Robot:
    def __init__(self):
        self.x=0.0
        self.y=0.0
        self.speed=0.0
        self.angle=0.0
        self.p=0 #nbre de points
        self.u=0.0 #masse
        self.q=b*self.u+b0
    def go(self):
        self.speed=v0*math.exp(-a*self.u)
    def turn(self):
        pass
    def touch(self,type):
        if type==1:
            self.p+=1
            self.u+=1        
        if type==2:
            self.p+=2
            self.u+=2
        if type==3:
            self.p+=3
            self.u+=2
    def finish(self):
        self.speed=0
        scoref=self.p
    def getx(self):
        return self.x
    def gety(self):
        return self.y

class Cylindre:
    def __init__(self,x,y,type):
        self.x=x
        self.y=y
        self.R=rayon
        if type==1:
            self.r=1 #recompense
            self.m=1 #masse       
        if type==2:
            self.r=2
            self.m=2
        if type==3:
            self.r=3
            self.m=2
            
    def touched(self):
        self.r=0
    def getx(self):
        return self.x
    def gety(self):
        return self.y
    def getR(self):
        return self.R
    def setx(self, x):
        self.x=x
    def __str__(self):
        return f"recompense:{self.r};masse:{self.m}"            

#Création Robot
robot=Robot()
figure, axes = plt.subplots()
axes.set_aspect( 1 )
a=robot.getx()
b=robot.gety()
plt.plot(a,b,marker="x", color="red")

#Création Cylindres
donnees=np.loadtxt("C:\CHALLENGE\donnees-map.txt")

Cylindres = []

for i in range(len(donnees)):
  Cylindres.append(Cylindre(donnees[i][0],donnees[i][1],donnees[i][2]))
  
for i in range(len(Cylindres)):
    a=Cylindres[i].getx()
    b=Cylindres[i].gety()
    c=Cylindres[i].getR()
    Drawing_colored_circle = plt.Circle(( a,b), c )
    plt.annotate(i+1,(a , b))
    axes.add_artist( Drawing_colored_circle )

plt.show()

for i in range(len(Cylindres)):
    if (robot.getx()=>Cylindres[i].getx()-1 & robot.getx()<=Cylindres[i].getx()+1) & (robot.gety()==Cylindres[i].gety()):
        
        
